import sys
import math

"""
http://kmjp.hatenablog.jp/entry/2015/01/20/0900
N種類のサプリメントを順に摂りたい。
１日あたり、最低１つのサプリメントを摂らなければならない。
また、１日に複数のサプリメントを摂ることができるが、味F[i]が重複する複数のサプリメントは同日に取ることができない。
各サプリメントの味F[i]が与えられるとき、サプリメントの摂り方の組み合わせを答えよ。

x個目までのサプリメントの摂りかたの組み合わせをdp[x]とし、dp[1]～dp[x]の総和をS[x]とする。
x個目のサプリメントの摂り方は、x個目と同時に取れるサプリメントの番号の最小値をM[x]として
dp[x]=dp[M[x]]+dp[M[x]+1]+...+dp[x-1]=S[x-1]-S[M[x]-1]
とおくことができる。
直前に味pのサプリメントが登場した番号をnum[p]とすると、
M[x]=min(M[x-1], num[F[x]])
でM[x]を更新できる。

両方合わせて、O(N)のDPで解ける。
"""

N, M = map(int, input().split())

dp = [0] * (N + 2)
S = [0] * (N + 2)

dp[1] = S[1] = 1

mo = 1000000007
prev = [1] * 100003

le = 1
for i in range(0, N):
    f = int(input())
    le = max(le, prev[f])
    # 複雑にmoを使う理由は？
    dp[i+2] = (S[i+1] - S[le-1] + mo) % mo
    S[i+2] = (S[i+1] + dp[i+2]) % mo
    prev[f] = i + 2

print(((dp[N+1] % mo) + mo) %mo)
